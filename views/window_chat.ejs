<div id="window-chat" class="mdl-layout mdl-js-layout mdl-layout--fixed-header">
    <header class="mdl-layout__header">
        <div class="back-button">
            <a href="<%= baseUrl %>">
                <i class="material-icons">arrow_back</i>
            </a>
        </div>
        <div class="mdl-layout__header-row">
            <span class="mdl-layout-title">Title</span>
            <div class="mdl-layout-spacer"></div>
            <button id="chat-options" class="mdl-button mdl-js-button mdl-button--icon mdl-js-ripple-effect">
            <i class="material-icons">more_vert</i>
            </button>
            <ul class="mdl-menu mdl-menu--bottom-right mdl-js-menu mdl-js-ripple-effect"
                for="chat-options">
                <li class="mdl-menu__item">Some Action</li>
                <li class="mdl-menu__item">Another Action</li>
                <li disabled class="mdl-menu__item">Disabled Action</li>
                <li class="mdl-menu__item">Yet Another Action</li>
            </ul>
        </div>
    </header>
    <main class="mdl-layout__content">
        <div class="page-content">
            <div class="msg-from me fullwidth">
                <div class="bg-cover"></div>
                <div class="msg-time">10:27 am</div>
                <div>Some text message</div>
            </div>
            <div class="msg-from other fullwidth">
                <div class="bg-cover"></div>
                <div class="msg-time">10:27 am</div>
                <div>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</div>
            </div>
            
            <textarea id="input-text" placeholder="Type something here"></textarea>
            
            <!--div id="input-canvas">
                <canvas id="canvas"></canvas>
                <div>
                    <button class="mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored">
                        <i class="material-icons">send</i>
                    </button>
                    <button class="mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored">
                        <i class="material-icons">undo</i>
                    </button>
                    <button class="mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored">
                        <i class="material-icons">delete</i>
                    </button>
                    <button class="mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored">
                        <i class="material-icons">brush</i>
                    </button>
                    <button class="mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored">
                        <i class="material-icons">color_lens</i>
                    </button>
                </div>
            </div-->
            
            <!--div id="input-location" class="bg-cover" style="background-image: url('http://maps.googleapis.com/maps/api/staticmap?center=-27.4995676,152.9889577&zoom=16&size=350x250&sensor=false');">
                <button class="mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored">
                    <i class="material-icons">send</i>
                </button>
                <button class="mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored">
                    <i class="material-icons">refresh</i>
                </button>
            </div-->
            
            <!--div id="input-image" class="bg-cover" style="background-image: url('http://maps.googleapis.com/maps/api/staticmap?center=-27.4995676,152.9889577&zoom=16&size=350x250&sensor=false');">
                <button class="mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored">
                    <i class="material-icons">send</i>
                </button>
                <button class="mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored">
                    <i class="material-icons">file_upload</i>
                </button>
            </div-->
            
            
            <button class="mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored chat-option-button">
                <i class="material-icons">keyboard_arrow_up</i>
            </button>
        </div>
    </main>
</div>

<script>
    //input preview
    $('#file-prev, .input-file i').on('click', function () {
    	$('#file-input').click();
    });
    //file reader
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#file-prev').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }
    
    $('#file-input').change(function(){
        readURL(this);
    });
    
    
    //Geolocation
    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition, showError, {enableHighAccuracy: true});
        } else {
            $('.input-location').html('<h3 class="text-center fullwidth marg-0">Geolocation is not supported by this browser.</h3>');
        }
    }
    
    function showPosition(position) {
        var latlon = position.coords.latitude + "," + position.coords.longitude;
    
        var img_url = "http://maps.googleapis.com/maps/api/staticmap?center="
        +latlon+"&zoom=16&size=350x250&sensor=false";
    	
        $('.input-location div').empty().append('<img src="'+img_url+'">');
    }
    
    function showError(error) {
        switch(error.code) {
            case error.PERMISSION_DENIED:
    			$('.input-location').html('<h3 class="text-center fullwidth marg-0">Please enable your location service from the settings.</h3>');
                break;
            case error.POSITION_UNAVAILABLE:
    			$('.input-location').html('<h3 class="text-center fullwidth marg-0">Location information is unavailable.</h3>');
                break;
            case error.TIMEOUT:
    			$('.input-location').html('<h3 class="text-center fullwidth marg-0">The request to get user location timed out.</h3>');
                break;
            case error.UNKNOWN_ERROR:
    			$('.input-location').html('<h3 class="text-center fullwidth marg-0">An unknown error occurred.</h3>');
                break;
        }
    }
    
    //Canvas
    var canvas = document.getElementById('canvas');
    var context = canvas.getContext('2d');
    
    var radius = 2;
    var dragging = false;
    
    var putPoint = function(e) {
        if(dragging) {
            var xPos = e.clientX - canvas.getBoundingClientRect().left;
            var yPos = e.clientY - canvas.getBoundingClientRect().top;
    
            context.lineTo(xPos, yPos);
            context.stroke();
            context.beginPath();
            context.arc(xPos, yPos, radius, 0, Math.PI*2);
            context.fill();
            context.beginPath();
            context.moveTo(xPos, yPos);
        }
    }
    
    $('#canvas')
        .on('mousedown vmousedown', function(e) {
            dragging = true;
            putPoint(e);
    })
        .on('mousemove vmousemove', function(e) {
            putPoint(e);
    })
        .on('mouseup vmouseup', function() {
            dragging = false;
            context.beginPath();
    });
    
    //clear canvas
    function resetCanvas() {
        canvas.width = $('#canvas').width();
        canvas.height = $('#canvas').height();
        context.lineWidth = radius*2;
        context.fillStyle = '#354b60';
        context.strokeStyle = '#354b60';
        $('#canvas-opt-color i.fa').css('color', '#354b60');
    }
    $('#canvas-opt-clear').on('click', function() {
        //if(confirm('Are you sure want to delete the drawing?')) {}
        resetCanvas();
    });
    
    //save canvas
    /*
        <?php
    
        $data = $_POST['image'];
        $data = str_replace('data:image/png;base64,', '', $data);
        $data = str_replace(' ', '+', $data);
    
        $img = base64_decode($data);
        $path = '../images/' . uniqid() . '.png';
        if(file_put_contents($path, $img))
            echo $path;
        else {
            echo 'error';
        }
    
    
        //force browser to download
        #header('Content-type: image/png');
        #header('Content-disposition: attachment; filename=TheFileName.png');
        #readfile($_GET['url']);
    
        ?>
    */
    $('#canvas-opt-save').on('click', function() {
        var canvas_data = canvas.toDataURL();
    
        console.log(canvas_data);
        
        /*
            $.ajax({
                method: 'post',
                url: "php/save_canvas.php",
                data: 'image='+canvas_data,
            }).success(function(feedback) {
                console.log(feedback);
            });
        */
    });
    
    //select color
    $('#canvas-opt-color').on('click', function (e) {
        $('#color-input').click();
    });
    
    $('#color-input').on('change', function () {
        var c = $(this).val();
        $('#canvas-opt-color i.fa').css('color', c);
        context.fillStyle = c;
        context.strokeStyle = c;
    });
    
    $('#canvas-opt-thickness').on('click', function() {
        $('#brush-tickness-control').toggle();
        radius = $('#brush-tickness-control input').val();
        context.lineWidth = radius*2;
    });
    
    $('#brush-tickness-control input').on('change mouseup vmouseup', function() {
        $('#brush-tickness-control').hide();
        radius = $(this).val();
        context.lineWidth = radius*2;
    });
</script>